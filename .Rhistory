sub_district = distribution_location_sub_district,
community = distribution_location_town,
delivery_modality = distribution_modality,
site = location_name,
# Check if there is something like this in other forms
voucher_type = distrebuted_voucher_type,
hh_size = total_number_of_hh_members,
# levels should "No" and "Yes"
pwds_in_hh = are_there_any_people_with_disabilities_in_your_household)
shafak_care %>% count(did_you_face_any_challenges_while_redeeming_the_vouchers)
shafak_care %>%
pivot_longer(cols =
c(on_what_did_your_household_spend_use_the_cash_received_from_the_vouchers,
on_what_did_your_household_spend_use_the_cash_received_from_the_vouchers_100,
on_what_did_your_household_spend_use_the_cash_received_from_the_vouchers_101).
shafak_care %>%
pivot_longer(cols =
c(on_what_did_your_household_spend_use_the_cash_received_from_the_vouchers,
on_what_did_your_household_spend_use_the_cash_received_from_the_vouchers_100,
on_what_did_your_household_spend_use_the_cash_received_from_the_vouchers_101),
names_to = "item_cat",
values_to = "items_bought") %>%
count(items_bought)
shafak_care %>%
glimpse()
shafak_care %>% count(distrebuted_voucher_type_multi_rounds_voucher)
shafak_care %>% count(what_are_your_households_three_most_urgent_and_important_needs_that_are_not_currently_met)
shafak_care <- read_excel("./data/pdm_raw/BHA_COMRES II_CARE_422_Cash_One_off_MPCA PDM For Faris-Shafak.xlsx") %>%
select(where(not_all_na)) %>%
clean_names() %>%
rename(governorate = distribution_location_governorate,
district = distribution_location_district,
sub_district = distribution_location_sub_district,
community = distribution_location_town,
delivery_modality = distribution_modality,
site = location_name,
# Check if there is something like this in other forms
voucher_type = distrebuted_voucher_type,
hh_size = total_number_of_hh_members,
# levels should "No" and "Yes"
pwds_in_hh = are_there_any_people_with_disabilities_in_your_household,
# store them like this, add a fourth and fifth column if it helps with the rbind()
# But in the analysis, you'll need to pivot_longer()
# As a further note, the options do not match with the harmonised tool,
# so after pivoting, you will still need to clean this column
items_bought1 = on_what_did_your_household_spend_use_the_cash_received_from_the_vouchers,
items_bought2 = on_what_did_your_household_spend_use_the_cash_received_from_the_vouchers_100,
items_bought3 = on_what_did_your_household_spend_use_the_cash_received_from_the_vouchers_101,
unmet_needs = what_are_your_households_three_most_urgent_and_important_needs_that_are_not_currently_met)
shafak_care %>% count(unmet_needs)
shafak_care %>%
mutate(unmet_needs = str_replace_all(unmet_needs, "Shelter/Housing", "Shelter")) %>%
count(unmet_needs)
shafak_care %>%
mutate(unmet_needs = str_replace_all(unmet_needs, "Shelter/Housing", "Shelter"),
unmet_needs = unlist(strsplit(unmet_needs, "\\s+(?=C)", perl=TRUE)))
shafak_care %>%
mutate(unmet_needs = str_replace_all(unmet_needs, "Shelter/Housing", "Shelter"),
unmet_needs = (strsplit(unmet_needs, "\\s+(?=C)", perl=TRUE)))
shafak_care %>%
mutate(unmet_needs = str_replace_all(unmet_needs, "Shelter/Housing", "Shelter"),
unmet_needs = (strsplit(unmet_needs, "\\s+(?=C)", perl=TRUE))) %>%
unlist(unmet_needs)
shafak_care %>%
mutate(unmet_needs = str_replace_all(unmet_needs, "Shelter/Housing", "Shelter"),
unmet_needs = (strsplit(unmet_needs, "\\s+(?=C)", perl=TRUE)))
shafak_care %>%
mutate(unmet_needs = str_replace_all(unmet_needs, "Shelter/Housing", "Shelter"),
unmet_needs = (strsplit(unmet_needs, "\\s+(?=C)", perl=TRUE))) %>%
select(unmet_needs) %>%
unlist()
shafak_care %>%
mutate(unmet_needs = str_replace_all(unmet_needs, "Shelter/Housing", "Shelter"),
unmet_needs = str_replace_all(
unmet_needs,
pattern = "([[:upper:]])",
replacement = " \\1,"
)) %>%
select(unmet_needs)
shafak_care %>%
mutate(unmet_needs = str_replace_all(unmet_needs, "Shelter/Housing", "Shelter"),
unmet_needs = str_replace_all(
unmet_needs,
pattern = "([[:upper:]])",
replacement = " ,\\1"
)) %>%
select(unmet_needs)
shafak_care %>%
mutate(unmet_needs = str_replace_all(unmet_needs, "Shelter/Housing", "Shelter"),
unmet_needs = str_replace_all(
unmet_needs,
pattern = "([[:upper:]])",
replacement = ", \\1"
)) %>%
select(unmet_needs)
shafak_care %>%
mutate(unmet_needs = str_replace_all(unmet_needs, "Shelter/Housing", "Shelter"),
unmet_needs = str_replace_all(
unmet_needs,
pattern = "([[:upper:]])",
replacement = ", \\1"),
unmet_needs = str_sub(unmet_needs, start = 3L, end = -1L)) %>%
select(unmet_needs)
shafak_care %>%
mutate(unmet_needs = str_replace_all(unmet_needs, "Shelter/Housing", "Shelter"),
unmet_needs = str_replace_all(
unmet_needs,
pattern = "([[:upper:]])",
replacement = ", \\1"),
unmet_needs = str_trim(str_sub(unmet_needs, start = 3L, end = -1L))) %>%
select(unmet_needs)
shafak_care %>%
%>% mutate(unmet_needs = str_replace_all(unmet_needs, "Shelter/Housing", "Shelter"),
shafak_care %>%
mutate(unmet_needs = str_replace_all(unmet_needs, "Shelter/Housing", "Shelter"),
unmet_needs = str_replace_all(
unmet_needs,
pattern = "([[:upper:]])",
replacement = ", \\1"),
unmet_needs = trimws(str_sub(unmet_needs, start = 3L, end = -1L))) %>%
select(unmet_needs)
shafak_care %>% select(contains("currency"))
shafak_care %>%
glimpse()
shafak_care %>% count(do_you_think_the_assistance_you_received_were_in_line_with_your_needs )
shafak_care %>% count(were_you_satisfied_with_the_redemption_process)
shafak_care %>% count(why_60)
shafak_care %>% count(were_you_satisfied_with_the_redemption_process)
shafak_care %>% count(if_yes_what_were_those_difficulties)
knitr::opts_chunk$set(echo = TRUE, fig.width=9, message = FALSE, warning=FALSE)
library(tidyverse)
library(readxl)
library(lubridate)
library(stringi)
library(janitor)
library(scales)
library(magrittr)
library(viridis)
library(skimr)
library(patchwork)
library(DT)
library(here)
library(sf)
library(plotly)
library(flextable)
theme_set(theme_light())
# disabling scientific notation
options(scipen = 100)
`%out%` <- Negate(`%in%`)
# function for transposing df
transpose_df <- function(df) {
t_df <- data.table::transpose(df)
colnames(t_df) <- rownames(df)
rownames(t_df) <- colnames(df)
t_df <- t_df %>%
tibble::rownames_to_column(.data = .) %>%
tibble::as_tibble(.)
return(t_df)
}
# scaling functions
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
#mode function
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
not_all_na <- function(x) any(!is.na(x))
not_any_na <- function(x) all(!is.na(x))
locations <- read_csv("./data/locations_aoc.csv")
pcode3_shape <-
st_read("./data/syr_admbnda_uncs_unocha_20201217/syr_admbnda_adm3_uncs_unocha_20201217.shp")
shafak_care <- read_excel("./data/pdm_raw/BHA_COMRES II_CARE_422_Cash_One_off_MPCA PDM For Faris-Shafak.xlsx") %>%
select(where(not_all_na)) %>%
clean_names() %>%
rename(governorate = distribution_location_governorate,
district = distribution_location_district,
sub_district = distribution_location_sub_district,
community = distribution_location_town,
delivery_modality = distribution_modality,
site = location_name,
# Check if there is something like this in other forms
voucher_type = distrebuted_voucher_type,
hh_size = total_number_of_hh_members,
# levels should "No" and "Yes"
pwds_in_hh = are_there_any_people_with_disabilities_in_your_household,
# store them like this, add a fourth and fifth column if it helps with the rbind()
# But in the analysis, you'll need to pivot_longer()
# As a further note, the options do not match with the harmonised tool,
# so after pivoting, you will still need to clean this column
items_bought1 =
on_what_did_your_household_spend_use_the_cash_received_from_the_vouchers,
items_bought2 =
on_what_did_your_household_spend_use_the_cash_received_from_the_vouchers_100,
items_bought3 =
on_what_did_your_household_spend_use_the_cash_received_from_the_vouchers_101,
unmet_needs =
what_are_your_households_three_most_urgent_and_important_needs_that_are_not_currently_met,
was_assistance_appropriate =
do_you_think_the_assistance_you_received_were_in_line_with_your_needs) %>%
# Inelegant, because you'll still need to trimws after you separate,
# but it makes more sense to store it all in one column
mutate(unmet_needs = str_replace_all(unmet_needs, "Shelter/Housing", "Shelter"),
unmet_needs = str_replace_all(
unmet_needs,
pattern = "([[:upper:]])",
replacement = ", \\1"),
unmet_needs = str_sub(unmet_needs, start = 3L, end = -1L)) %>%
# Not sure about this transformation.
# Maybe it's better to say that they didn't comply with 3.4 and 3.5
mutate(challenges_spending_exchanging =
ifelse(were_you_satisfied_with_the_redemption_process  %in% c("Strongly Satisfied",
"Satisfied"),
"Yes", "No"))
shafak_care %>% count(female_headed_household)
goal <-
read_excel("./data/pdm_raw/EQ Emergency PDM Data GOAL.xlsx") %>%
select(where(not_all_na))
goal %>% glimpse()
goal <-
read_excel("./data/pdm_raw/EQ Emergency PDM Data GOAL.xlsx") %>%
select(where(not_all_na)) %>%
clean_names()
goal %>% glimpse()
goal %>% count(form_location_details_please_enter_the_name_of_the_village_that_you_could_not_find)
library(naniar)
# GOAL's NA is "---"
goal <-
read_excel("./data/pdm_raw/EQ Emergency PDM Data GOAL.xlsx") %>%
replace_with_na_all(condition = ~ .x == "---") %>%
select(where(not_all_na)) %>%
clean_names()
# GOAL's NA is "---"
goal <-
read_excel("./data/pdm_raw/EQ Emergency PDM Data GOAL.xlsx") %>%
replace_with_na_all(condition = ~ .x == "\\---") %>%
select(where(not_all_na)) %>%
clean_names()
# GOAL's NA is "---"
goal <-
read_excel("./data/pdm_raw/EQ Emergency PDM Data GOAL.xlsx") %>%
select(-form.date) %>%
replace_with_na_all(condition = ~ .x == "\\---") %>%
select(where(not_all_na)) %>%
clean_names()
goal %>% glimpse()
# GOAL's NA is "---"
goal <-
read_excel("./data/pdm_raw/EQ Emergency PDM Data GOAL.xlsx") %>%
select(-form.date) %>%
replace_with_na_all(condition = ~ .x == "\\---") %>%
select(where(not_all_na)) %>%
clean_names() %>%
left_join(read_excel("./data/pdm_raw/EQ Emergency PDM Data GOAL.xlsx") %>%
select(formid, form_date = form.date),
by = "formid")
goal %>% glimpse()
goal %>% count(form_location_details_please_enter_the_name_of_the_village_that_you_could_not_find)
# GOAL's NA is "---"
goal <-
read_excel("./data/pdm_raw/EQ Emergency PDM Data GOAL.xlsx") %>%
select(-form.date) %>%
replace_with_na_all(condition = ~ .x == "---") %>%
select(where(not_all_na)) %>%
clean_names() %>%
# Doing this because the date column is blocking me from replacing
# all "---" with NAs, because dealing with dates is irritating
left_join(read_excel("./data/pdm_raw/EQ Emergency PDM Data GOAL.xlsx") %>%
select(formid, form_date = form.date),
by = "formid")
goal %>% glimpse()
goal %>% count(form_has_anyone_asked_you_to_share_part_of_the_assistance_you_received_to_be_given_to_other_families_choice
)
goal %>% glimpse()
goal %>% count(form_any_tension_between_you_and_your_community_choice)
goal %>% select(contains("tension"))
goal %>% select(contains("tension"))[ , 2:5]
goal %>% select(contains("tension")) %>%
select(2:5)
goal %>% select(contains("tension")) %>%
select(2:5) %>%
summarise_all(.funs = sum(., na.rm = TRUE))
goal %>% select(contains("tension")) %>%
select(2:5) %>%
summarise_all(.funs = sum(., na.rm = TRUE))
goal %>% select(contains("tension")) %>%
select(2:5)
goal %>% select(contains("tension")) %>%
select(2:5) %>%
mutate_all(.funs = as.numeric(.)) %>%
summarise_all(.funs = sum(., na.rm = TRUE))
goal %>% select(contains("tension")) %>%
select(2:5) %>%
mutate_all(.funs = as.numeric(.))
goal %>% select(contains("tension")) %>%
select(2:5)
# GOAL's NA is "---"
goal <-
read_excel("./data/pdm_raw/EQ Emergency PDM Data GOAL.xlsx") %>%
select(-form.date) %>%
replace_with_na_all(condition = ~ .x == "---") %>%
select(where(not_all_na)) %>%
clean_names() %>%
rename_all(str_replace_all("form_", "")) %>%
# Doing this because the date column is blocking me from replacing
# all "---" with NAs, because dealing with dates is irritating
left_join(read_excel("./data/pdm_raw/EQ Emergency PDM Data GOAL.xlsx") %>%
select(formid, date = form.date),
by = "formid") %>%
rename(share_assistance =
has_anyone_asked_you_to_share_part_of_the_assistance_you_received_to_be_given_to_other_families_choice,
fee_tax_assistance =
has_anyone_taxed_you_money_or_vouchers_or_items_or_services_or_favours_in_order_to_receive_the_assistance_or_after_receiving_it_choice,
tensions_family_community = any_tension_between_you_and_your_community_choice) %>%
# Just capitalising the first letter of Yesses and Nos
mutate_at(vars(share_assistance,
fee_tax_assistance,
tensions_family_community), ~ str_to_title(.))
# GOAL's NA is "---"
goal <-
read_excel("./data/pdm_raw/EQ Emergency PDM Data GOAL.xlsx") %>%
select(-form.date) %>%
replace_with_na_all(condition = ~ .x == "---") %>%
select(where(not_all_na)) %>%
clean_names() %>%
rename_all(str_replace_all(., "form_", "")) %>%
# Doing this because the date column is blocking me from replacing
# all "---" with NAs, because dealing with dates is irritating
left_join(read_excel("./data/pdm_raw/EQ Emergency PDM Data GOAL.xlsx") %>%
select(formid, date = form.date),
by = "formid") %>%
rename(share_assistance =
has_anyone_asked_you_to_share_part_of_the_assistance_you_received_to_be_given_to_other_families_choice,
fee_tax_assistance =
has_anyone_taxed_you_money_or_vouchers_or_items_or_services_or_favours_in_order_to_receive_the_assistance_or_after_receiving_it_choice,
tensions_family_community = any_tension_between_you_and_your_community_choice) %>%
# Just capitalising the first letter of Yesses and Nos
mutate_at(vars(share_assistance,
fee_tax_assistance,
tensions_family_community), ~ str_to_title(.))
read_excel("./data/pdm_raw/EQ Emergency PDM Data GOAL.xlsx") %>%
select(-form.date) %>%
replace_with_na_all(condition = ~ .x == "---") %>%
select(where(not_all_na)) %>%
clean_names() %>%
rename_all(str_replace_all(., "form_", ""))
# GOAL's NA is "---"
goal <-
read_excel("./data/pdm_raw/EQ Emergency PDM Data GOAL.xlsx") %>%
select(-form.date) %>%
replace_with_na_all(condition = ~ .x == "---") %>%
select(where(not_all_na)) %>%
clean_names() %>%
# Doing this because the date column is blocking me from replacing
# all "---" with NAs, because dealing with dates is irritating
left_join(read_excel("./data/pdm_raw/EQ Emergency PDM Data GOAL.xlsx") %>%
select(formid, date = form.date),
by = "formid") %>%
rename(share_assistance =
form_has_anyone_asked_you_to_share_part_of_the_assistance_you_received_to_be_given_to_other_families_choice,
fee_tax_assistance =
form_has_anyone_taxed_you_money_or_vouchers_or_items_or_services_or_favours_in_order_to_receive_the_assistance_or_after_receiving_it_choice,
tensions_family_community = form_any_tension_between_you_and_your_community_choice) %>%
# Just capitalising the first letter of Yesses and Nos
mutate_at(vars(share_assistance,
fee_tax_assistance,
tensions_family_community), ~ str_to_title(.))
goal %>% count(form_any_disagreements_within_your_family_choice)
goal %>% select(contains("quality_of_banknote"))
goal %>% select(contains("quality_of_usd_banknote"))
goal %>% glimpse()
# GOAL's NA is "---"
goal <-
read_excel("./data/pdm_raw/EQ Emergency PDM Data GOAL.xlsx") %>%
select(-form.date) %>%
replace_with_na_all(condition = ~ .x == "---") %>%
select(where(not_all_na)) %>%
clean_names() %>%
rename_all(funs(
str_replace_all(., "form_", "") %>%
str_replace_all(., "_choice", "")
))
# GOAL's NA is "---"
goal <-
read_excel("./data/pdm_raw/EQ Emergency PDM Data GOAL.xlsx") %>%
select(-form.date) %>%
replace_with_na_all(condition = ~ .x == "---") %>%
select(where(not_all_na)) %>%
clean_names() %>%
rename_all(funs(
str_replace_all(., "form_", "") %>%
str_replace_all(., "_choice", "")
)) %>%
# Doing this because the date column is blocking me from replacing
# all "---" with NAs, because dealing with dates is irritating
left_join(read_excel("./data/pdm_raw/EQ Emergency PDM Data GOAL.xlsx") %>%
select(formid, date = form.date),
by = "formid") %>%
rename(share_assistance =
has_anyone_asked_you_to_share_part_of_the_assistance_you_received_to_be_given_to_other_families,
fee_tax_assistance =
has_anyone_taxed_you_money_or_vouchers_or_items_or_services_or_favours_in_order_to_receive_the_assistance_or_after_receiving_it,
tensions_family_community = any_tension_between_you_and_your_community,
disagreements_within_family = any_disagreements_within_your_family,
transfer_value_usd = cash_what_is_the_value_of_cash_you_have_received_usd,
satisfied_with_banknote_quality =
form_cash_were_you_satisfied_with_the_quality_of_usd_banknote_choice,
banknote_quality()) %>%
# Just capitalising the first letter of Yesses and Nos
mutate_at(vars(share_assistance,
fee_tax_assistance,
tensions_family_community), ~ str_to_title(.))
# GOAL's NA is "---"
goal <-
read_excel("./data/pdm_raw/EQ Emergency PDM Data GOAL.xlsx") %>%
select(-form.date) %>%
replace_with_na_all(condition = ~ .x == "---") %>%
select(where(not_all_na)) %>%
clean_names() %>%
rename_all(funs(
str_replace_all(., "form_", "") %>%
str_replace_all(., "_choice", "")
)) %>%
# Doing this because the date column is blocking me from replacing
# all "---" with NAs, because dealing with dates is irritating
left_join(read_excel("./data/pdm_raw/EQ Emergency PDM Data GOAL.xlsx") %>%
select(formid, date = form.date),
by = "formid") %>%
rename(share_assistance =
has_anyone_asked_you_to_share_part_of_the_assistance_you_received_to_be_given_to_other_families,
fee_tax_assistance =
has_anyone_taxed_you_money_or_vouchers_or_items_or_services_or_favours_in_order_to_receive_the_assistance_or_after_receiving_it,
tensions_family_community = any_tension_between_you_and_your_community,
disagreements_within_family = any_disagreements_within_your_family,
transfer_value_usd = cash_what_is_the_value_of_cash_you_have_received_usd,
satisfied_with_banknote_quality =
cash_were_you_satisfied_with_the_quality_of_usd_banknote,
banknote_quality()) %>%
# Just capitalising the first letter of Yesses and Nos
mutate_at(vars(share_assistance,
fee_tax_assistance,
tensions_family_community,
satisfied_with_banknote_quality), ~ str_to_title(.))
# GOAL's NA is "---"
goal <-
read_excel("./data/pdm_raw/EQ Emergency PDM Data GOAL.xlsx") %>%
select(-form.date) %>%
replace_with_na_all(condition = ~ .x == "---") %>%
select(where(not_all_na)) %>%
clean_names() %>%
rename_all(funs(
str_replace_all(., "form_", "") %>%
str_replace_all(., "_choice", "")
)) %>%
# Doing this because the date column is blocking me from replacing
# all "---" with NAs, because dealing with dates is irritating
left_join(read_excel("./data/pdm_raw/EQ Emergency PDM Data GOAL.xlsx") %>%
select(formid, date = form.date),
by = "formid") %>%
rename(share_assistance =
has_anyone_asked_you_to_share_part_of_the_assistance_you_received_to_be_given_to_other_families,
fee_tax_assistance =
has_anyone_taxed_you_money_or_vouchers_or_items_or_services_or_favours_in_order_to_receive_the_assistance_or_after_receiving_it,
tensions_family_community = any_tension_between_you_and_your_community,
disagreements_within_family = any_disagreements_within_your_family,
transfer_value_usd = cash_what_is_the_value_of_cash_you_have_received_usd,
satisfied_with_banknote_quality =
cash_were_you_satisfied_with_the_quality_of_usd_banknote) %>%
# Just capitalising the first letter of Yesses and Nos
mutate_at(vars(share_assistance,
fee_tax_assistance,
tensions_family_community,
satisfied_with_banknote_quality), ~ str_to_title(.))
goal %>% glimpse()
select_all(~gsub("cash_were_you_satisfied_with_the_quality_of_usd_banknote_if_no_why_", "", .)
goal %>%
select_all(~gsub("cash_were_you_satisfied_with_the_quality_of_usd_banknote_if_no_why_", "", .))
goal %>%
select_all(~gsub("cash_were_you_satisfied_with_the_quality_of_usd_banknote_if_no_why_", "", .)) %>%
select(contains("banknote"))
goal %>% glimpse()
goal %>% glimpse()
goal %>% count(cash_who_in_the_hh_was_responsible_for_spending_the_cash)
shafak_care %>% glimpse()
shafak_care %>% glimpse()
shafak_care %>% count(please_give_an_example_of_how_the_cash_transfers_vouchers_etc_impacted_your_life_or_the_lives_of_others_in_your_household_positively_or_negatively)
goal %>% count(cash_were_you_able_to_find_the_items_you_need_in_the_market)
syria_relief <- read_excel("./data/pdm_raw/First Q_PDM_SR_MPCA Syria Relief.xlsx") %>%
clean_names()
syria_relief
syria_relief <- read_excel("./data/pdm_raw/First Q_PDM_SR_MPCA Syria Relief.xlsx") %>%
clean_names() %>%
select(where(not_all_na))
syria_relief
syria_relief %>% glimpse()
syria_relief %>% count(x4_3_what_did_your_household_actually_spend_this_multipurpose_cash_assistance_on)
syria_relief %>% count(x2_5_1_current_residence_status)
syria_relief
syria_relief <- read_excel("./data/pdm_raw/First Q_PDM_SR_MPCA Syria Relief.xlsx") %>%
clean_names() %>%
select(where(not_all_na)) %>%
mutate_at(vars(x1_3_governorate:x1_6_village), ~ str_sub(., start = 6L, end = -1L)) %>%
mutate(idp_household = ifelse(x2_5_1_current_residence_status == "Internally or Internationally Displaced", "Yes", "No"))
syria_relief
syria_relief <- read_excel("./data/pdm_raw/First Q_PDM_SR_MPCA Syria Relief.xlsx") %>%
clean_names() %>%
select(where(not_all_na)) %>%
rename_at(vars(x1_3_governorate:x1_6_village), ~ str_sub(., start = 6L, end = -1L)) %>%
mutate(idp_household = ifelse(x2_5_1_current_residence_status == "Internally or Internationally Displaced", "Yes", "No"))
syria_relief
syria_relief %>% count(x2_5_1_current_residence_status)
syria_relief
